/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */
import{a as j}from"./BDJ7OECW.js";import{a as G}from"./73JLUGUM.js";import{J as Z,e as C,f as w,g as d,w as P,x as f,z as $}from"./RVKGKVXB.js";function S(h,i,r){let a=i[0]-h[0],n=r[0]-i[0],l=i[1]-h[1],o=r[1]-i[1],e=l/(a||n<0&&0),s=o/(n||a<0&&0),t=(e*n+s*a)/(a+n);return(Math.sign(e)+Math.sign(s))*Math.min(Math.abs(e),Math.abs(s),.5*Math.abs(t))||0}function H(h,i,r){let a=i[0]-h[0],n=i[1]-h[1];return a?(3*n/a-r)/2:r}function O(h,i,r,a,n){let[l,o]=h,[e,s]=i,t=(e-l)/3,c=n([l+t,o+t*r]).join(","),g=n([e-t,s-t*a]).join(","),p=n([e,s]).join(",");return`C ${c} ${g} ${p}`}function E({width:h,height:i,min:r,max:a}){let n=a[0]-r[0],l=a[1]-r[1];return o=>{let e=(o[0]-r[0])/n*h,s=i-(o[1]-r[1])/l*i;return[e,s]}}function R(h){let[i,r]=h[0],a=[i,r],n=[i,r];return h.reduce(({min:l,max:o},[e,s])=>({min:[Math.min(l[0],e),Math.min(l[1],s)],max:[Math.max(o[0],e),Math.max(o[1],s)]}),{min:a,max:n})}function q({data:h,min:i,max:r,t:a}){if(h.length===0)return"";let[n,l]=a(h[0]),[o,e]=a(i),[s]=a(r),t,c,g,p=h.reduce((x,M,m)=>{if(c=h[m-2],g=h[m-1],m>1){let u=S(c,g,M),k=t===void 0?H(c,g,u):t,L=O(c,g,k,u,a);return t=u,`${x} ${L}`}return x},`M ${o},${e} L ${o},${l} L ${n},${l}`),y=h[h.length-1],v=O(g,y,t,H(g,y,t),a);return`${p} ${v} L ${s},${e} Z`}var I=C`:host{display:block;block-size:100%}.svg{fill:currentColor;stroke:transparent;margin:0;display:block;block-size:100%;inline-size:100%;padding:0}.svg .graph-path--highlight{fill:var(--calcite-graph-highlight-fill-color, var(--calcite-color-brand));opacity:.5}:host([hidden]){display:none}[hidden]{display:none}`,b={svg:"svg",graphPath:"graph-path",graphPathHighlight:"graph-path--highlight"},z=class extends P{constructor(){super(...arguments),this.graphId=`calcite-graph-${G()}`,this.resizeObserver=j("resize",()=>this.requestUpdate()),this.data=[]}static{this.properties={colorStops:0,data:0,highlightMax:9,highlightMin:9,max:11,min:11}}static{this.styles=I}connectedCallback(){super.connectedCallback(),this.resizeObserver?.observe(this.el)}disconnectedCallback(){super.disconnectedCallback(),this.resizeObserver?.disconnect()}render(){let{data:i,colorStops:r,el:a,highlightMax:n,highlightMin:l,min:o,max:e}=this,s=this.graphId,{clientHeight:t,clientWidth:c}=a;if(!i||i.length===0)return w`<svg aria-hidden=true class=${f(b.svg)} height=${t??$} preserveAspectRatio=none viewBox=${`0 0 ${c} ${t}`} width=${c??$}></svg>`;let{min:g,max:p}=R(i),y=g,v=p;(o<g[0]||o>g[0])&&(y=[o,0]),(e>p[0]||e<p[0])&&(v=[e,p[1]]);let x=E({min:y,max:v,width:c,height:t}),[M]=x([l,v[1]]),[m]=x([n,v[1]]),u=q({data:i,min:g,max:p,t:x}),k=r?`url(#linear-gradient-${s})`:void 0;return w`<svg aria-hidden=true class=${f(b.svg)} height=${t??$} preserveAspectRatio=none viewBox=${`0 0 ${c} ${t}`} width=${c??$}>${r?d`<defs><linearGradient .id=${`linear-gradient-${s}`} x1=0 x2=1 y1=0 y2=0>${r.map(({offset:L,color:A,opacity:B})=>d`<stop offset=${`${L*100}%`} stop-color=${A??$} stop-opacity=${B??$} />`)}</linearGradient></defs>`:null}${l!==void 0?[d`<mask height=100% .id=${`${s}1`} width=100% x=0% y=0%><path d=${`
            M 0,0
            L ${M-1},0
            L ${M-1},${t}
            L 0,${t}
            Z
          `} fill=white /></mask>`,d`<mask height=100% .id=${`${s}2`} width=100% x=0% y=0%><path d=${`
            M ${M+1},0
            L ${m-1},0
            L ${m-1},${t}
            L ${M+1}, ${t}
            Z
          `} fill=white /></mask>`,d`<mask height=100% .id=${`${s}3`} width=100% x=0% y=0%><path d=${`
                M ${m+1},0
                L ${c},0
                L ${c},${t}
                L ${m+1}, ${t}
                Z
              `} fill=white /></mask>`,d`<path class=${f(b.graphPath)} d=${u??$} fill=${k??$} mask=${`url(#${s}1)`} />`,d`<path class=${f(b.graphPathHighlight)} d=${u??$} fill=${k??$} mask=${`url(#${s}2)`} />`,d`<path class=${f(b.graphPath)} d=${u??$} fill=${k??$} mask=${`url(#${s}3)`} />`]:d`<path class=${f(b.graphPath)} d=${u??$} fill=${k??$} />`}</svg>`}};Z("calcite-graph",z);export{z as Graph};
