import { makeGenericController as l } from "@arcgis/components-controllers";
import { createFocusTrap as p } from "focus-trap";
import { p as T, b as v } from "./dom.js";
import { f as b } from "./runtime.js";
/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */
function C(t, e) {
  return {
    clickOutsideDeactivates: !0,
    fallbackFocus: e?.fallbackFocus || t,
    setReturnFocus: (r) => (v(r), !1),
    ...e,
    // the following options are not overridable
    document: t.ownerDocument,
    tabbableOptions: T,
    trapStack: b
  };
}
function f(t, { focusTrapOptions: e }, s) {
  return !e?.extraContainers && !s ? t : [t, ...n(e?.extraContainers), ...n(s)];
}
function n(t = []) {
  return Array.isArray(t) ? t : [t];
}
const k = (t) => l((e, s) => {
  let r, u, c;
  const d = t.focusTrapOptions;
  s.onConnected(() => {
    e[t.triggerProp] && r && i.activate();
  }), s.onUpdate((a) => {
    e.hasUpdated && a.has("focusTrapDisabled") && (e.focusTrapDisabled ? i.deactivate() : i.activate());
  }), s.onDisconnected(() => i.deactivate());
  const i = {
    activate: () => {
      const a = u || e.el;
      if (a.isConnected) {
        if (!r) {
          const o = {
            ...d,
            ...e.focusTrapOptions
          };
          c ||= f(a, e), r = p(c, C(a, o));
        }
        (typeof e.focusTrapDisabledOverride == "function" ? !e.focusTrapDisabledOverride() : !e.focusTrapDisabled) && r.activate();
      }
    },
    deactivate: () => r?.deactivate(),
    overrideFocusTrapEl: (a) => {
      if (r)
        throw new Error("Focus trap already created");
      u = a;
    },
    setExtraContainers: (a) => {
      const o = u || e.el;
      c = f(o, e, a);
    },
    updateContainerElements: () => r?.updateContainerElements(c)
  };
  return i;
});
export {
  k as u
};
